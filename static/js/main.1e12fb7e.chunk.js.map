{"version":3,"sources":["main.jsx","Header.jsx","Jumbotron.jsx","modal.jsx","footer.jsx","App.js","serviceWorker.js","index.js"],"names":["Main","className","id","width","border","cellspacing","cellpadding","align","rowspan","src","alt","Header","props","useState","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","target","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","NavbarText","Jumbotron","Baru","modalIsOpen","setModalIsOpen","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1e12fb7e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Main = () => {\r\n  return(\r\n  <div className ='myProfile' id=\"Aldino\">\r\n    <div className = 'Dino'>\r\n      <h3>My profile</h3>\r\n      <table width=\"100%\" border=\"1\" cellspacing=\"0\" cellpadding=\"5\" align=\"center\">\r\n<tr className='Bio' align='center'>\r\n<td >FOTO</td>\r\n<td>DATA DIRI</td>\r\n<td>KETERANGAN</td>\r\n</tr>\r\n<tr>\r\n<td width='200px' rowspan=\"10\" align=\"center\"><img src=\"Aldino.jpg\" alt=\"Aldino\" /></td>\r\n<td>Nama</td>\r\n<td>MOCHAMAD ALDINO</td>\r\n</tr>\r\n<tr>\r\n<td>PENDIDKAN</td>\r\n<td>SMA</td>\r\n</tr>\r\n<tr>\r\n<td>Jenis Kelamin</td>\r\n<td>Laki-laki</td>\r\n</tr>\r\n<tr>\r\n<td>Tempat/Tanggal Lahir </td>\r\n<td>JAKARTA, 08 May 2000</td>\r\n</tr>\r\n<tr>\r\n<td>RIWAYAT PENDIDIKAN</td>\r\n<td>\r\nSDN CIDENG 09 JAKARTA PUSAT\r\n<br />\r\nSMP NEGERI 3 OBI HAL-SEL\r\n<br />\r\nSMA NEGERI 3 KOTA TERNATE</td>\r\n</tr>\r\n<tr>\r\n<td>Alamat</td>\r\n<td>Jl. Nuku, Kel. Tanah Raja Kec.Ternate Tengah Kab. Kota Ternate</td>\r\n</tr>\r\n</table>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\nexport default Main ; ","import React, { useState } from 'react';\r\nimport {\r\n  Alert,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n  } from 'reactstrap';\r\n  import Main from './main.jsx' ;\r\n\r\nconst Header = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div className=\"modal-body\">    \r\n      <Navbar className=\"navbar fixed-top navbar-expand-md scrolling-navbar\" light expand=\"md\">\r\n        <NavbarBrand href=\"#\">Home</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"#\"></NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"https://github.com/aldinoAlfath/myCalculator\" target=\"_blank\">GitHub</NavLink>\r\n            </NavItem>\r\n            <UncontrolledDropdown nav inNavbar >\r\n              <DropdownToggle nav caret>\r\n                Options\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem href=\"#\">\r\n                  Halaman Awal\r\n                </DropdownItem>\r\n                <DropdownItem href=\"#Aldino\">\r\n                  tentang saya\r\n                </DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem href=\"http://localhost:3000/\">\r\n                  Reset\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </Nav>\r\n          <NavbarText>Simple Text</NavbarText>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\nexport default Header;","import React from 'react';\r\n\r\nconst Jumbotron = () => {\r\n\treturn(\r\n\t  <div className=\"top-wrapper\">\r\n      <div className=\"container\">\r\n        <h1>BELAJAR CODING.</h1>\r\n        <h1>BELAJAR MENJADI LEBIH KREATIF.</h1>\r\n        <h2>Kunjungi Akun Sosmed Ku</h2>\r\n        <div className=\"btn-wrapper\">\r\n          <a href=\"https://mail.google.com/\" className=\"btn signup\">\r\n           <img src='iconfinder_gmail_1220367.png' /></a>\r\n          <p>atau</p>\r\n          <a href=\"https://www.facebook.com/muhammad.al.1213/\" className=\"btn facebook\">\r\n            <span className= \"fa fa-facebook\"> <img src='iconfinder_social_style_3_facebook_341099.png' /></span>\r\n          </a>\r\n          <a href=\"https://twitter.com/login\" className=\"btn twitter\">\r\n            <span className= \"fa fa-twitter\">\r\n             <img src='iconfinder_1_Twitter3_colored_svg_5296516.png' />\r\n            </span>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\t)\r\n\r\n}\r\nexport default Jumbotron;\r\n ","import React,{ useState } from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nfunction Baru() {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false)\r\n  return(\r\n  <div className=\"Aldino\">\r\n    <button onClick={() => setModalIsOpen(true)}>Pesan</button>\r\n    <Modal className='modalIsOpen' isOpen={modalIsOpen} align=\"center\">\r\n      <h2>sabda Rasulullah S.A.W:</h2>\r\n      <p><em>تَعَلَّمُوْاوَعَلِّمُوْاوَتَوَاضَعُوْالِمُعَلِّمِيْكُمْ وَلَيَلَوْا لِمُعَلِّمِيْكُمْ ( رَواهُ الطَّبْرَانِيْ)\r\n\r\nArtinya, \"Belajarlah kamu semua, dan mengajarlah kamu semua, dan hormatilah guru-gurumu, serta berlaku baiklah terhadap orang yang mengajarkanmu.\" (HR Tabrani)</em></p>\r\n      <div>\r\n      <button onClick={() => setModalIsOpen(false)}>close</button>\r\n      </div>\r\n      </Modal>\r\n  </div>\r\n  );\r\n}\r\nexport default Baru ;","import React from 'react';\r\n\r\nfunction Footer(){\r\n\treturn(\r\n\t\t\t<div>\r\n\t\t\t <footer>\r\n\t\t\t  <div className='btn-footer'>\r\n\t\t\t   <h1><span className='copyright'>copyright&copy;</span> <em>Mochamad Aldino</em> 2020</h1>\r\n\t\t\t  </div>\r\n\t\t\t </footer>\r\n\t\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Footer;","import React, { useState } from 'react';\nimport Header from './Header.jsx';\nimport { Button } from '@material-ui/core';\nimport Jumbotron from './Jumbotron.jsx';\nimport Main from './main.jsx'\nimport Baru from \"./modal.jsx\"\nimport Footer from './footer.jsx'\n const App = () => {\n  return (\n    <div className=\"App\">\n    <Header /> \n       <Jumbotron />\n       <Main />\n       <br/>\n       <Baru />\n       <Footer />\n      </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}